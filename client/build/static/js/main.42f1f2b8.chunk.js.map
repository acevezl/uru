{"version":3,"sources":["utils/auth.js","utils/mutations.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","components/Footer.js","utils/queries.js","components/TherapistList.js","components/SearchBar.js","pages/Home.js","components/ReachOutForm.js","utils/helpers.js","pages/SingleTherapist.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LOGIN_USER","gql","ADD_USER","ADD_FILE","SignupForm","useState","username","email","password","userFormData","setUserFormData","validated","useMutation","addUser","error","showAlert","setShowAlert","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","variables","data","Auth","login","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","first_name","last_name","phone","Button","disabled","LoginForm","AppNavbar","showLoginModal","setShowLoginModal","showSignupModal","setShowSignupModal","className","href","src","loggedIn","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","Container","Header","closeButton","Title","Body","Content","handleModalClose","Footer","style","color","rel","QUERY_ME","QUERY_THERAPIST","QUERY_THERAPISTS_CRITERIA","TherapistList","therapists","length","Row","map","therapist","Col","Card","key","_id","Img","photo","Text","specialties","specialty","skills","skill","to","SearchBar","searchText","setSearchText","useQuery","criteria","loading","therapistcriteria","console","log","InputGroup","FormControl","Home","ReachOutForm","props","user","me","addFile","patient_name","dob","allergies","notes","formState","setFormState","sendEmail","templateParams","therapist_first_name","therapist_email","user_email","user_first_name","emailjs","send","then","response","status","text","errorMessage","setErrorMessage","submissionSuccess","setSubmissionSuccess","formVisibility","setFormVisibility","handleChange","isValid","test","String","toLowerCase","handleSubmit","therapist_id","data-testid","id","defaultValue","onBlur","rows","SingleTherapist","therapistId","useParams","alt","width","bio","background","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","Navbar","exact","path","component","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42f1f2b8.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!, $first_name: String!, $last_name: String!, $phone: String!) {\r\n    addUser(username: $username, email: $email, password: $password, first_name: $first_name, last_name: $last_name, phone: $phone) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_FILE = gql `\r\n  mutation addFile($patient_name: String!, $dob: String!, $allergies: String!, $notes: String!, $therapist_id: String!) {\r\n    addFile(patient_name: $patient_name, dob: $dob, allergies: $allergies, notes: $notes, therapist_id: $therapist_id) {\r\n      patient_name\r\n      dob\r\n      allergies\r\n      notes\r\n      therapist_id\r\n    }\r\n  }\r\n`\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\n\r\n//import { createUser } from '../utils/API';\r\nimport Auth from \"../utils/auth\";\r\n\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(error ? true : false);\r\n\r\n  // const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        \r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your username\"\r\n            name=\"username\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"first_name\">First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your first name\"\r\n            name=\"first_name\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.first_name}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            First name is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"last_name\">Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your last name\"\r\n            name=\"last_name\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.last_name}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Last name is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"phone\">Phone Number</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your phone number\"\r\n            name=\"phone\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.phone}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Your phone number is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Your email address\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={\r\n            !(\r\n              userFormData.username &&\r\n              userFormData.email &&\r\n              userFormData.password\r\n            )\r\n          }\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  \r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n  const [showAlert, setShowAlert] = useState(error ? true : false);\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...userFormData }\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      setShowAlert(true);\r\n    }\r\n\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        { error && \r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        }\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Modal, Tab } from \"react-bootstrap\";\r\n\r\nimport { FilePersonFill } from \"react-bootstrap-icons\";\r\n\r\nimport SignUpForm from \"./SignupForm\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showSignupModal, setShowSignupModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-custom border-bottom sticky-top\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          <img className=\"photo\" src=\"/images/uru2we.png\" />\r\n        </a>\r\n\r\n        <div className=\"form-inline\">\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <button\r\n                className=\"btn btn-outline-secondary my-2 my-sm-0 mx-2\"\r\n                type=\"submit\"\r\n                onClick={Auth.logout}\r\n              >\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"btn btn-outline-secondary my-2 my-sm-0 mx-2\"\r\n                type=\"submit\"\r\n                onClick={() => setShowLoginModal(true)}\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary my-2 my-sm-0 text-white\"\r\n                type=\"submit\"\r\n                onClick={() => setShowSignupModal(true)}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n\r\n      {/* login modal */}\r\n      <Modal\r\n        size=\"sml\"\r\n        show={showLoginModal}\r\n        onHide={() => setShowLoginModal(false)}\r\n        aria-labelledby=\"login-modal\"\r\n      >\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img className=\"logologin\" src=\"images/b2.jpeg\" />\r\n            <img className=\"logologin\" src=\"images/g1.jpeg\" />\r\n            <Tab.Content>\r\n              <LoginForm handleModalClose={() => setShowLoginModal(false)} />\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n\r\n      {/* signup modal */}\r\n      <Modal\r\n        size=\"sml\"\r\n        show={showSignupModal}\r\n        onHide={() => setShowSignupModal(false)}\r\n        aria-labelledby=\"signup-modal\"\r\n      >\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Sign Up</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <img className=\"logosignup\" src=\"images/urus.png\" />\r\n            <Tab.Content>\r\n              <SignUpForm handleModalClose={() => setShowSignupModal(false)} />\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from \"react\";\r\nimport { Github, Facebook, Instagram } from \"react-bootstrap-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"py-3 mt-5 site-footer site-footer--with-clipmask\">\r\n      <div>\r\n        <p\r\n          className=\"text-center site-footer__copyright\"\r\n          style={{ color: \"#116c95\" }}\r\n        ></p>\r\n        <p className=\"text-center\">\r\n          <a\r\n            href=\"https://github.com/acevezl/uru\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"#116c95\" }}\r\n          >\r\n            {/* <img className=\"photofoot\" src=\"images/urus.png\" /> */}\r\n          </a>\r\n        </p>\r\n        <ul className=\"nav justify-content-center p-3 mb-3\">\r\n          <li className=\"nav-item\" style={{ color: \"#260725\" }}>\r\n            \"Today you are you, that is truer than true. There is no one alive,\r\n            that is youer than you\" ~ Dr. Seuss\r\n          </li>\r\n        </ul>{\" \"}\r\n        URU&copy;2021{\" \"}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\n// const Footer = () => {\r\n//   return (\r\n//     <footer className=\"site-footer site-footer--with-clipmask\">\r\n//       <div className=\"site-footer__quote\">\"I am glad to see you here\"</div>\r\n//       <div className=\"site-social\">\r\n//         <div className=\"site-social__list\">\r\n//           <a href=\"\" className=\"site-social__link\">\r\n//             <svg\r\n//               xmlns=\"http://www.w3.org/2000/svg\"\r\n//               width=\"24\"\r\n//               height=\"24\"\r\n//               viewBox=\"0 0 24 24\"\r\n//             >\r\n//               <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm3 8h-1.35c-.538 0-.65.221-.65.778v1.222h2l-.209 2h-1.791v7h-3v-7h-2v-2h2v-2.308c0-1.769.931-2.692 3.029-2.692h1.971v3z\" />\r\n//             </svg>\r\n//           </a>\r\n//         </div>\r\n//         <div className=\"site-social__list\">\r\n//           <a\r\n//             href=\"https://github.com/acevezl/uru\"\r\n//             className=\"site-social__link\"\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//           >\r\n//             <svg\r\n//               xmlns=\"http://www.w3.org/2000/svg\"\r\n//               width=\"24\"\r\n//               height=\"24\"\r\n//               viewBox=\"0 0 24 24\"\r\n//             >\r\n//               <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n//             </svg>\r\n//           </a>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"site-footer__copyright\"> Copyright &copy; 2021 </div>\r\n//     </footer>\r\n//   );\r\n// };\r\n\r\nexport default Footer;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const QUERY_ME = gql`\r\n  {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n      first_name\r\n      last_name\r\n      phone\r\n      files {\r\n        patient_name\r\n        dob\r\n        allergies\r\n        notes\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_THERAPIST = gql`\r\n  query therapist($id: ID!) {\r\n    therapist(_id: $id) {\r\n      _id\r\n      username\r\n      email\r\n      first_name\r\n      last_name\r\n      phone\r\n      specialties\r\n      skills\r\n      photo\r\n      bio\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_THERAPISTS_CRITERIA = gql`\r\n  query therapistcriteria($criteria: String!) {\r\n    therapistcriteria(criteria: $criteria) {\r\n      _id\r\n      username\r\n      email\r\n      first_name\r\n      last_name\r\n      phone\r\n      specialties\r\n      skills\r\n      photo\r\n      bio\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_THERAPISTS = gql`\r\n  {\r\n    therapists {\r\n      _id\r\n      username\r\n      email\r\n      first_name\r\n      last_name\r\n      phone\r\n      specialties\r\n      skills\r\n      photo\r\n      bio\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Col, Row, Card } from \"react-bootstrap\";\r\n\r\nconst TherapistList = ({ therapists }) => {\r\n  if (!therapists.length) {\r\n    return <h3>No therapists were found</h3>;\r\n  }\r\n\r\n  return (\r\n    <Row className=\"m-3\">\r\n      {therapists &&\r\n        therapists.map((therapist) => (\r\n          <Col className=\"col-xl-3\">\r\n            <Card\r\n              className=\"mb-3\"\r\n              key={therapist._id}\r\n            >\r\n              <Card.Img\r\n                variant=\"top\"\r\n                className=\"site-footer3--with-clipmask\"\r\n                src={therapist.photo}\r\n              />\r\n              <Card.Body className=\"search-results-card\">\r\n                <Card.Title>\r\n                  <h2>\r\n                    {therapist.first_name} {therapist.last_name}\r\n                  </h2>\r\n                </Card.Title>\r\n                <br />\r\n                <Card.Text>\r\n                  <h3>Specialties:</h3>\r\n                  <p>\r\n                    {therapist.specialties.map((specialty) => (\r\n                      <span>{specialty}, </span>\r\n                    ))}\r\n                  </p>\r\n                  <h3>Skills:</h3>\r\n\r\n                  <p>\r\n                    {therapist.skills.map((skill) => (\r\n                      <span>{skill}, </span>\r\n                    ))}\r\n                  </p>\r\n                </Card.Text>\r\n              </Card.Body>\r\n              <Card.Body>\r\n                <Link\r\n                    className=\"btn btn-primary\"\r\n                    to={`/therapist/${therapist._id}`}\r\n                  >\r\n                    View Profile\r\n                  </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TherapistList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_THERAPISTS_CRITERIA } from \"../utils/queries\";\r\nimport TherapistList from \"../components/TherapistList\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst SearchBar = () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const { loading, data } = useQuery(QUERY_THERAPISTS_CRITERIA, {\r\n    variables: { criteria: searchText },\r\n  });\r\n\r\n  const therapists = data?.therapistcriteria || [];\r\n  \r\n  // update state based on form input changes\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSearchText(event.target.searchText.value);\r\n    console.log(event.target.searchText.value);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-center\">\r\n        <Row className=\"m-5 col-10 col-sm-8\">\r\n          <Col>\r\n            <h1 style={{ color: \"#116c95\" }}>\r\n              Let us help you find a Therapist for your child.\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-sm-8\">\r\n          <Form onSubmit={handleSubmit} className=\"col-12\">\r\n            <InputGroup\r\n              type=\"search\"\r\n              className=\"mb-3\"\r\n            >\r\n              <FormControl\r\n                name=\"searchText\"\r\n                placeholder=\"Seach for a specialty...\"\r\n                className=\"p-2\"\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n            </InputGroup>\r\n            <Button type=\"submit\">\r\n                Search\r\n            </Button>\r\n          </Form>\r\n        </Row>\r\n      </Row>\r\n      {/* therapist cards, need to be conditionally rendered */}\r\n      <Row>\r\n        {loading ? (\r\n          <div>Loading therapists...</div>\r\n        ) : (\r\n          <TherapistList therapists={therapists} />\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useParams } from \"react\";\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <SearchBar></SearchBar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { validateEmail } from \"../utils/helpers\";\r\nimport emailjs from 'emailjs-com';\r\n\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { ADD_FILE } from '../utils/mutations';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst ReachOutForm = (props) => {\r\n\r\n    const therapist = props.therapist;\r\n\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n    const user = data?.me || {};\r\n    console.log(user);\r\n\r\n    const [addFile, { error }] = useMutation(ADD_FILE);\r\n\r\n    const [formState, setFormState] = useState(\r\n        {\r\n            patient_name: '',\r\n            dob: '',\r\n            allergies: '',\r\n            notes: ''\r\n        }\r\n    );\r\n\r\n    function sendEmail() {\r\n        const templateParams = {\r\n            therapist_first_name: therapist.first_name,\r\n            therapist_email: therapist.email,\r\n            user_email: user.email,\r\n            user_first_name: user.first_name\r\n        };\r\n\r\n        emailjs.send('service_v6o96rr', 'template_f1mty9m', templateParams, 'user_QURpyb1Ov7NpwPVclx5Di')\r\n            .then((response) => {\r\n                console.log('SUCCESS!', response.status, response.text);\r\n            }, (err) => {\r\n                console.log('FAILED...', err);\r\n            });\r\n    }\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [submissionSuccess, setSubmissionSuccess] = useState(false);\r\n    const [formVisibility, setFormVisibility] = useState(false);\r\n\r\n\r\n    const { patient_name, dob, allergies, notes } = formState;\r\n\r\n    function handleChange(event) {\r\n\r\n        if (event.target.name === 'email') {\r\n            const isValid = validateEmail(event.target.value);\r\n            setErrorMessage(!isValid ? 'Your email is invalid' : '')\r\n        } else {\r\n            setErrorMessage(!event.target.value.length ? `Your ${event.target.name} is required.` : ``);\r\n        }\r\n\r\n        if (!errorMessage) {\r\n            setFormState({ ...formState, [event.target.name]: event.target.value })\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const therapist_id = therapist._id;\r\n\r\n        try {\r\n            await addFile({\r\n                variables: {\r\n                    patient_name, dob, allergies, notes, therapist_id\r\n                }\r\n            });\r\n            sendEmail();\r\n            setSubmissionSuccess(true);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='contact'>\r\n            { !formVisibility ? (\r\n                <button type=\"button\" className=\"btn btn-warning btn-lg px-4 me-md-2 text-white\" onClick={() => setFormVisibility(true)}>\r\n                    Establish Care\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        <h2 className='col-12'>Establish Care with {therapist.first_name} {therapist.last_name}</h2>\r\n                        <div className='contactForm mb-5'>\r\n                            {submissionSuccess ? (\r\n                                <>\r\n                                    <h3>Thank you for your interest.</h3>\r\n                                    <p>We have sent your Care request to {therapist.first_name}. They will respond to your message within the next 24-48 hours.</p>\r\n                                    <button data-testid=\"button\" className='btn btn-primary' onClick={() => { setFormVisibility(false); setSubmissionSuccess(false); }}>Ok</button>\r\n                                </>\r\n                            ) : (\r\n                                    <form id='contact-form' className='mb-3' onSubmit={handleSubmit}>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className='input-group-prepend'>\r\n                                                <label className='input-group-text' htmlFor='patient_name'>Patient Name:</label>\r\n                                            </div>\r\n                                            <input className='form-control' type='text' id='patient_name' name='patient_name' defaultValue={patient_name} onBlur={handleChange} />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className='input-group-prepend'>\r\n                                                <label className='input-group-text' htmlFor='dob'>Date of birth:</label>\r\n                                            </div>\r\n                                            <input className='form-control' type='text' id='dob' name='dob' defaultValue={dob} onBlur={handleChange} />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className='input-group-prepend'>\r\n                                                <label className='input-group-text' htmlFor='allergies'>Allergies:</label>\r\n                                            </div>\r\n                                            <input className='form-control' type='text' id='allergies' name='allergies' defaultValue={allergies} onBlur={handleChange} />\r\n                                        </div>\r\n                                        <div className='input-group mb-3'>\r\n                                            <div className='input-group-prepend'>\r\n                                                <label className='input-group-text' htmlFor='notes'>How can {therapist.first_name} help you? </label>\r\n                                            </div>\r\n                                            <textarea className='form-control' rows='5' type='text' id='notes' name='notes' defaultValue={notes} onBlur={handleChange} />\r\n                                        </div>\r\n                                        {\r\n                                            errorMessage && (\r\n                                                <div className='alert alert-danger'>\r\n                                                    {errorMessage}\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <button data-testid=\"button\" className='btn btn-primary mr-3' type=\"submit\" >Submit</button>\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setFormVisibility(false)}>Cancel</button>\r\n                                    </form>\r\n                                )}\r\n\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ReachOutForm;\r\n\r\n","export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}","import React from \"react\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { QUERY_THERAPIST } from \"../utils/queries\"; \r\nimport ReachOutForm from \"../components/ReachOutForm\";\r\n\r\nconst SingleTherapist = (props) => {\r\n  const { id: therapistId } = useParams();\r\n\r\n  const { loading, data } = useQuery(QUERY_THERAPIST, {\r\n    variables: { id: therapistId },\r\n  });\r\n\r\n  const therapist = data?.therapist || {};\r\n\r\n  const loggedIn = Auth.loggedIn();\r\n\r\n  if (loading) {\r\n    return <h3>Loading data...</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-5\">\r\n          <div className=\"col col-sm-5 col-xl-4 align-middle\">\r\n            <img\r\n              src={therapist.photo}\r\n              className=\"site-footer3--with-clipmask mb-3\"\r\n              alt={therapist.first_name + \" \" + therapist.last_name}\r\n              loading=\"lazy\"\r\n              width=\"200\"\r\n            />\r\n            <h1>\r\n              {therapist.first_name} {therapist.last_name}\r\n            </h1>\r\n            <p>{therapist.bio}</p>\r\n          </div>\r\n          <div className=\"col col-sm-5 col-xl-4\">\r\n            <div\r\n              className=\"p-5 mt-3 rounded shadow\"\r\n              style={{ background: \"#c8c6c1\" }}\r\n            >\r\n              <h2>Specialties</h2>\r\n              <ul>\r\n                {therapist.specialties.map((specialty) => (\r\n                  <li>{specialty}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div\r\n              className=\"p-5 mt-3 rounded shadow\"\r\n              style={{ background: \"#d1ced8\" }}\r\n            >\r\n              <h2>Skills</h2>\r\n              <ul>\r\n                {therapist.skills.map((skill) => (\r\n                  <li>{skill}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col mt-5\">\r\n              \r\n              {loggedIn ? (\r\n                <>\r\n                  <ReachOutForm therapist={therapist}/>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Login to establish care with {therapist.first_name} {therapist.last_name}.\r\n                </>\r\n              )}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleTherapist;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from \"./pages/Home\";\r\nimport SingleTherapist from \"./pages/SingleTherapist\";\r\n// import \"./sass/main.scss\";\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem(\"id_token\");\r\n\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n  },\r\n  uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/therapist/:id\" component={SingleTherapist} />\r\n            <Route\r\n              render={() => (\r\n                <h1 className=\"display-2\">\r\n                  The page requested does not exist!\r\n                </h1>\r\n              )}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}